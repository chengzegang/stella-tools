[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "stella-tools"
version = "0.1.0"
requires-python = ">=3.9"

readme = "README.md"
license = {text = "MIT"}
keywords = ["stella", "tools"]
description = "A tool to extract trajectory data from stella VSLAM"
authors = [
    {name = "Zegang Cheng", email = "20091803+chengzegang@users.noreply.github.com"},
]
dependencies = [
    'torch>=1.13',
    'torchdata',
    'numpy',
    'sqlmodel',
    'matplotlib',
    'typer',
    'pandas',
    'typing_extensions',
   
]

[project.urls]
Documentation = "https://github.com/chengzegang/stella-tools#readme"
Issues = "https://github.com/chengzegang/stella-tools/issues"
Source = "https://github.com/chengzegang/stella-tools"

[project.scripts]
stella = "stella_tools._main:run"

[tool.hatch.version]
path = "src/stella_tools/__about__.py"

[tool.hatch.envs.default]
type = 'mamba'
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "isort",
  "flake8",
  "mypy",
  "black",
  "types-setuptools>=67.7.0.3",
  "lxml-stubs>=0.4.0",
  "types-Pillow>=9.5.0.4",
  "types-PyYAML>=6.0.12.9",
  "types-Pygments>=2.15.0.1",
  "types-Send2Trash>=1.8.2.5",
  "types-cffi>=1.15.1.13",
  "types-colorama>=0.4.15.11",
  "types-decorator>=5.1.8.3",
  "types-jsonschema>=4.17.0.8",
  "types-openpyxl>=3.1.0.8",
  "types-paramiko>=3.0.0.10",
  "types-psutil>=5.9.5.12",
  "types-python-dateutil>=2.8.19.13",
  "types-pywin32>=306.0.0.1",
  "types-six>=1.16.21.8",
  "types-tabulate>=0.9.0.2",
  "types-tqdm>=4.65.0.1",
  "types-typed-ast>=1.5.8.6",
  "types-urllib3>=1.26.25.13",
  "types-xxhash>=3.0.5.2",
  "isort>=5.12.0",
  "flake8>=6.0.0",
  "black>=23.3.0",
  "mypy>=1.3.0",
  "pytest>=7.3.1",
  "coverage>=7.2.5",
  "pytest-sugar>=0.9.7"
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/stella_tools tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py39", "py310", "3.11"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py39"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["stella_tools"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["stella_tools", "tests"]
branch = true
parallel = true
omit = [
  "src/stella_tools/__about__.py",
]



[tool.coverage.paths]
stella_tools = ["src/stella_tools", "*/stella-tools/src/stella_tools"]
tests = ["tests", "*/stella-tools/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
exclude = [
  'build/*',
]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
allow_redefinition = true
[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "matplotlib.*", 
    "torchdata.*",
    "matplotlib.*",
    "torchdata.*",
    "mypyc.*",

]
ignore_missing_imports = true

